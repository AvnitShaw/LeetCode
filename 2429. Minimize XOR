class Solution {
public:
bool isSet(int &x,int bit){
    return x & (1<<bit);
}
bool setBit(int &x,int bit){
 return x |=(1<<bit);
}
bool unsetBit(int &x,int bit){
   return x&=~(1<<bit);
}
    int minimizeXor(int num1, int num2) {
        int x=num1;

        int requiresSetbit=__builtin_popcount(num2);
        int currentSetbit=__builtin_popcount(x);
        int bit=0;
        if(currentSetbit < requiresSetbit){
            while(currentSetbit < requiresSetbit){
                if(!isSet(x,bit)){
                    setBit(x,bit);
                    currentSetbit++;
                }
                bit++;
            }
        }
        else if(currentSetbit > requiresSetbit){
            while(currentSetbit > requiresSetbit){
                if(isSet(x,bit)){
                    unsetBit(x,bit);
                    currentSetbit--;
                }
                bit++;
            }
            
        }
        return x;
    }
};
